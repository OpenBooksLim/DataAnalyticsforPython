# Step 1. 필요한 모듈을 import합니다.
# -*- coding: utf-8 -*-
import math

# 평균 구하는 함수
def _mean(values):
    return sum(values, 0.0) / len(values)

# 중앙값 구하는 함수
def _median(values):
    return values[int(len(values) / 2)]

# 분산 구하는 함수
def _variance(values, option):
    va = 0.0
    sum = 0.0
    mv = _mean(values)

    for i in range(0, len(values)):
        diff = values[i] - mv
        sum += diff * diff

    va = sum / (len(values) - option)
    return va

# 표준편차 구하는 함수
def _stdev(values, option):
    sd = 0.0
    sd = math.sqrt(_variance(values, option))
    return sd

# Step 1~3, Step 5는 생략하며, Step 4의 분석과정만을 실행하기 위하여 아래에서 fdIndex의 데이터를 그대로 사용합니다.
fdIndex = [48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 50, 50, 50, 50, 38, 36, 36, 36, 36, 36, 36, 36, 38, 38, 36, 38, 36, 36, 36, 36, 38, 38, 38, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 38, 38, 36, 36, 36, 36, 36, 36, 36, 36, 36, 38, 38, 38, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 38, 38, 38, 38, 36, 36, 36, 38, 38, 38, 38, 36, 36, 36, 36, 36, 36, 36, 36, 36, 38, 38, 38, 38, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 38, 38, 38, 36, 36, 38, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 38, 38, 38, 38, 36, 36, 36, 41, 41, 41, 42, 41, 41, 42, 42, 42, 41, 41, 41, 41, 41, 41, 41, 41, 42, 42, 42, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 42, 42, 42, 42, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 42, 41, 41, 41, 41, 42, 41, 41, 41, 41, 41, 41, 41, 41, 42, 42, 42, 41, 41, 41, 41, 41, 41, 42, 42, 42, 41, 41, 41, 41, 41, 41, 42, 41, 41, 41, 41, 41, 41, 41, 41, 41, 42, 42, 42, 41, 41, 41, 42, 42, 42, 42, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 42, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 32, 32, 32, 32, 43, 42, 42, 42, 42, 42, 42, 42, 43, 43, 42, 43, 42, 42, 42, 42, 43, 43, 43, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 43, 43, 42, 42, 42, 42, 42, 42, 42, 42, 42, 43, 43, 43, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 43, 43, 43, 43, 42, 42, 42, 43, 43, 43, 43, 42, 42, 42, 42, 42, 42, 42, 42, 42, 43, 43, 43, 43, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 43, 43, 43, 42, 42, 43, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 43, 43, 43, 43, 42, 42, 42, 48, 48, 48, 43, 48, 48, 43, 43, 43, 48, 48, 48, 48, 48, 48, 48, 48, 43, 43, 43, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 43, 43, 43, 43, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 43, 48, 48, 48, 48, 43, 48, 48, 48, 48, 48, 48, 48, 48, 43, 43, 43, 48, 48, 48, 48, 48, 48, 43, 43, 43, 48, 48, 48, 48, 48, 48, 43, 48, 48, 48, 48, 48, 48, 48, 48, 48, 43, 43, 43, 48, 48, 48, 43, 43, 43, 43, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 43, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 35, 35, 35, 35, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 46, 46, 46, 50, 46, 46, 50, 50, 50, 46, 46, 46, 46, 46, 46, 46, 46, 50, 50, 50, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 50, 50, 50, 50, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 50, 46, 46, 46, 46, 50, 46, 46, 46, 46, 46, 46, 46, 46, 50, 50, 50, 46, 46, 46, 46, 46, 46, 50, 50, 50, 46, 46, 46, 46, 46, 46, 50, 46, 46, 46, 46, 46, 46, 46, 46, 46, 50, 50, 50, 46, 46, 46, 50, 50, 50, 50, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 50]

fdIndex.sort()
print('=data count:::', len(fdIndex))
print('=mean:::{0:8.6f}'.format(_mean(fdIndex)))
print('=median:::{0:8.6f}'.format(_median(fdIndex)))
print('=pstdev:::{0:8.6f}'.format(_stdev(fdIndex, 0)))
print('=stdev:::{0:8.6f}'.format(_stdev(fdIndex, 1)))
print('=pvariance:::{0:8.6f}'.format(_variance(fdIndex, 0)))
print('=variance:::{0:8.6f}'.format(_variance(fdIndex, 1)))